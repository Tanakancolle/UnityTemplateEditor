%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 56a3a9f3b9043415681fb03d3faa50c2, type: 3}
  m_Name: PropertyGetterSetting
  m_EditorClassIdentifier: 
  Path: '{<PropertyGetterCreatePath>}'
  ScriptName: '{<PropertyGetterName>}.cs'
  Code: "using System;\nusing UnityEditor;\n\npublic partial class {<PropertyGetterName>}\n{\n
    \   public enum Property\n    {\n{<Repeat:        {0},:TypeNames>}\n    }\n\n
    \   private static readonly string[] PropertyNames =\n    {\n{<Repeat:        \"{0}\",:PropertyNames>}\n
    \   };\n\n    private readonly SerializedProperty[] _properties;\n\n    public
    {<PropertyGetterName>}(SerializedObject targetSerializedObject)\n    {\n        var
    names = Enum.GetNames(typeof(Property));\n        _properties = new SerializedProperty[names.Length];\n
    \       for (int i = 0; i < _properties.Length; ++i)\n        {\n            _properties[i]
    = targetSerializedObject.FindProperty(names[i]);\n        }\n    }\n\n    public
    SerializedProperty GetProperty(Property type)\n    {\n        return _properties[(int)
    type];\n    }\n}"
  CodeAreaMinHeight: 200
  CodeAreaMaxHeight: 200
  Overwrite: 1
  Chain: []
  DuplicatePrefab: {fileID: 0}
  AttachTarget: {fileID: 0}
  PrefabPath: 
  PrefabName: 
  AssetsMenuItem: 0
  Description: 
  IsFoldouts: 010101
  ScrollPos: {x: 0, y: 0}
